# Running the code on Enrico's Mac Air
#    /opt/local/bin/mpiexec-mpich-mp -np 4 ./maske input.dat


# ======== DESCRIPTION OF TEST09
#  Same as test12, but with fixes split in two for each subcomm



# ===== SET UNIVERSE OF SUB-COMMUNICATORS ========

# command structure: subcomm Nsubcomms name1 Nproc1 lmp_yes/no name2 Nproc2 .... nameN NprocN
# NB: the first subcomm should always be lmp_yes, otherwise thermos cannot be produced
subcomm 1 Antonello 4 lmp_yes 123



# ===== READ CHEMISTRY DATA BASE ========

# Load chemistry database file, containing molecule types, reactions, and mechanisms
chemDB chemDB.dat



# ===== LIST REAL AND TRIAL PARTICLE TYPES TO BE USED IN THE SIM =======

real_types 1 2 3 
trial_types 4 5



# ========= INITIALISE LAMMPS AND CREATE INITIAL CONFIGURATION =========

lammps all  units nano
lammps all  atom_style sphere
lammps all  boundary p p f
lammps  all  atom_modify map yes    # NEEDED FOR NUCLEATE FIXES!!
#  NB!!! FIX NUCLEATE ALSO REQUIRE LAMMPS TO BE COMPILED WITH MISC PACKAGE

#========= Creating a lattice and then box and layer based on it
lammps all	variable 	Diam equal 0.62374	#for C3S
lammps all	variable	Latsc equal v_Diam*sqrt(2.0)
lammps all	lattice		fcc $(v_Latsc) orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
lammps all	region		Rbox block -3 3 -3 3 -3 3 units lattice
lammps all	create_box	5 Rbox
lammps all	region		Rlay block -3 3 -3 3 -2.9 0.1 units lattice
lammps all	create_atoms	1 region Rlay
lammps all   set	type 1 diameter $(v_Diam)


#===== Potentials, neighbours, and minimiser style

lammps all   pair_style table linear 1245
lammps all   pair_coeff * * table.potential ENRICO
lammps all 	pair_write 2 2 1245 r 1.00E-030 0.697787634 tableOUT.txt ENRICO


lammps all  neighbor	.05 bin
lammps all  neigh_modify	delay 0
lammps all min_style quickmin
lammps all min_modify dmax .001 5 5 5


# ===========   FREEZE BOTTOM LAYER
lammps all region		Rbot block INF INF INF INF INF -1.5 units lattice
lammps all group gBot region 	Rbot
lammps all fix freezeBot gBot setforce 0.0 0.0 0.0



#========= Minimising the energy of the initial configuration
lammps all	minimize	0 0 10000 10000





# ======== CONSTANTS IN LAMMPS UNITS
kB  0.0138064852       # Boltzmann, in nm2 ag ns-2 K-1
hpl  0.000662607004   # Plank, in nm2 ag / ns



# =========== DEFINE LAMMPS GROUPS TO BE USED BY MASKE FIXES (delete, nucleate, etc)

lammps all   variable yl equal ylo+(yhi-ylo)/4
lammps all   variable yr equal ylo+(yhi-ylo)*3/4
lammps all   variable xl equal xlo+(xhi-xlo)/4
lammps all   variable xr equal xlo+(xhi-xlo)*3/4
lammps all   variable topl equal zlo+1.5*v_Diam

lammps all region RDiss block INF INF INF INF $(v_topl) INF units box
lammps all group gDiss region 	RDiss
lammps all set group gDiss type 2

lammps all region mid block $(v_xl) $(v_xr) $(v_yl) $(v_yr) $(v_topl) INF units box
lammps all group g_mid region 	mid
lammps all set group g_mid type 3






#  ===========   NUCLEATION AND DISSOLUTION FIXES LAYER BY PARTICLE DELETION
#sol_start uniform 4 H2O 55 Ca 0.300 H3SiO4 0.100 OH 0.500 Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 1e6 dVvoidV 0  unitC 1e-24

sol_start uniform 4 H2O 55 Ca 0.00 H3SiO4 0.00 OH 0.00 Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 1e6 dVvoidV 0  unitC 1e-24


lammps all print "Solution started ok"   



fix KMC-free delete DelC3S Antonello 2 mech C3Sdel_test sol_in fixed uniform box sol_out uniform box+dV

fix KMC-free delete DelC3S2 Antonello 3 mech C3Sdel_test sol_in fixed uniform box sol_out uniform box+dV


lammps all   variable midy equal ylo+(yhi-ylo)/2
store region RegNuc-l block INF INF INF $(v_midy) $(v_topl) 2 units box
store region RegNuc-r block INF INF $(v_midy) INF $(v_topl) 2 units box


lammps	all	variable Lx equal v_Diam*0.7
lammps	all	variable Ly equal v_Diam*0.7
lammps	all	variable Lz equal v_Diam*0.7
lammps	all	variable scale equal v_Lx
lammps	all	variable aa2 equal v_Ly/v_Lx
lammps	all	variable aa3 equal v_Lz/v_Lx
store	lattice LatNuc custom $(v_scale) a1 1.0 0.0 0.0 a2 0 $(v_aa2) 0.0 a3 0.0 0.0 $(v_aa3) basis 0.5 0.5 0.5
store 	DV	LatNuc variable DVvar equal v_Lx*v_Ly*v_Lz

lammps	all	variable Qdmax equal v_Lx/200
lammps	all	variable DxMax equal 10*v_Lx/2
lammps	all	variable DyMax equal 10*v_Ly/2
lammps	all	variable DzMax equal 10*v_Lz/2
store	minimize minNuc 0 0 1000 1000 min_modify dmax	$(v_Qdmax) $(v_DxMax) $(v_DyMax) $(v_DzMax)


fix KMC-free nucleate FixNuc-l Antonello RegNuc-l LatNuc minNuc 4 2 preal sphere 0.62374 wei simple 1 mech C3Snuc_test sol_in fixed uniform box sol_out uniform box+dV

fix KMC-free nucleate FixNuc-r Antonello RegNuc-r LatNuc minNuc 5 3 preal sphere 0.62374 wei simple 1 mech C3Snuc_test sol_in fixed uniform box sol_out uniform box+dV




lammps all print "All fixes added"





# ========= DEFINE LAMMPS DUMPS AND THERMOS + VARIABLES ALSO FOR MASKE OUTPUT

lammps all group preal type 1 2 3
lammps all variable N equal count(preal)
lammps all variable U equal epair
lammps all variable P equal press

lammps all compute  PEall all pe/atom
lammps all compute  Ucomp all reduce sum c_PEall

# the lammps thermo must calculate all the thermo variables and compute you want to output via the MASKE's thermo
lammps all thermo_style	custom step atoms v_N epair c_Ucomp press v_P vol
lammps all thermo 1000


thermo 1 thermo.txt conc_Ca conc_H3SiO4 conc_H2O conc_OH conc_C3S lmp_v_N lmp_v_U lmp_v_P 

dump Antonello D1 1 all     custom  dump.all id type x y z radius c_PEall


# relax every_Nsteps mode args (for minimize, etol ftol maxiter maxeval min_style min_modify_args;  for nvt, all args admitted by an nvt fix in lammps)
#example:      relax 10 minimize 0 0 1000 1000 quickmin dmax .01 20 20 20 
relax R1 1 minimize 0 0 1000 1000 quickmin dmax 0.001 5 5 5 




# =============== running the KMC simulation
lammps all print "STARTING KRUN" 
Krun 100000000000000


lammps Antonello print "\n SUCCESS \n"

