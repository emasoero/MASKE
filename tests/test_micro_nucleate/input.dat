
#    /opt/local/bin/mpiexec-mpich-mp -np 1 ./maske input.dat


# ===== SET UNIVERSE OF SUB-COMMUNICATORS ========

# command structure: subcomm Nsubcomms name1 Nproc1 lmp_yes/no seed name2 Nproc2 lammps_yes/no seed .... etc
# NB: the first subcomm should always be lmp_yes, otherwise thermos cannot be produced
  subcomm 2 Antonello 2 lmp_yes 123 subB 2 lmp_yes 456
# subcomm 1 Antonello 2 lmp_yes 123



# ===== LIST REAL AND TRIAL PARTICLE TYPES TO BE USED IN THE SIM =======
real_types 1
trial_types 2
# type 1 = real Ca(OH)2
# type 2 = trial Ca(OH)2 to nucleate


# ===== READ CHEMISTRY DATA BASE ========
# Load chemistry database file, containing molecule types, reactions, and mechanisms
chemDB ./chemDB.dat



# ========= INITIALISE LAMMPS AND CREATE FIRST PARTICLEs =========

lammps all  	units nano
lammps all 	atom_style sphere
lammps all  	atom_modify map yes   # NEEDED FOR NUCLEATE FIXES!!
lammps all 	boundary p p p
lammps all  	region simbox block 0 20 0 20 0 20 units box
lammps all  	create_box  2 simbox    #make space for enough types when creating box


# initially, all particles are Ca(OH)2 here, so consistent diameter here
lammps 	all 	variable DCH equal 0.473745541

# equilibrium distance assumes FCC equilibrium packing, with density 0.74
lammps  all 	variable eqDCH equal $(v_DCH)*(0.74^(1./3.))


# create a large sphere of CH
lammps all	variable scale equal sqrt(2)*v_eqDCH
lammps all	lattice fcc $(v_scale)  
lammps all	region nuc1 sphere 10 10 10 5 units box
lammps all 	create_atoms 1 region nuc1
lammps all 	group nuc1 region nuc1

 

lammps all 	set type 1 diameter $(v_DCH)
lammps all 	set type 2 diameter $(v_DCH)

#===== Potentials, neighbours, and minimiser style

# interaction potential from table file
lammps all 	pair_style 	table linear 4000
lammps all	pair_coeff 	1 1 ./table.potential_CH-CH.txt Spring_Ca(OH)2-Ca(OH)2
lammps all	pair_coeff 	1 2 ./table.potential_CH-CH.txt Spring_Ca(OH)2-Ca(OH)2
lammps all	pair_coeff 	2 2 ./table.potential_CH-CH.txt Spring_Ca(OH)2-Ca(OH)2	

lammps all	pair_write 1 1 4000 r 1.00E-030 0.62 tableOUT.txt Spring_CSH-CH


lammps all 	variable skin equal $(v_eqDCH)/10.
lammps all  	neighbor $(v_skin) bin
lammps all  	neigh_modify delay 0

# ======== CONSTANTS IN LAMMPS UNITS
kB  0.0138064852       # Boltzmann, in nm2 ag ns-2 K-1
hpl  0.000662607004   # Plank, in nm2 ag / ns


#  ===========   SET INITIAL SOLUTION



#beta=1.0

sol_start uniform 5 Ca+2 0.02 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ -0.00897736 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
setconc 4 Ca+2 0.05 OH- 0.02 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box

#beta=0

#sol_start uniform 5 Ca+2 0.000 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ 3.002264E-2 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
#setconc 4 Ca+2 0.000 OH- 0.03 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box

#beta=0.2

#sol_start uniform 5 Ca+2 0.00343 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ 0.02316264 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
#setconc 4 Ca+2 0.00343 OH- 0.03 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box


#beta=0.4

#sol_start uniform 5 Ca+2 0.00708 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ 0.01586264 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
#setconc 4 Ca+2 0.00708 OH- 0.03 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box

#beta=0.6

#sol_start uniform 5 Ca+2 0.01096 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ 0.00810264 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
#setconc 4 Ca+2 0.01096 OH- 0.03 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box

#beta=0.8

#sol_start uniform 5 Ca+2 0.01508 H4SiO4 0.00001 OH- 0.03 CO3-2 1.132E-5 H+ -0.00013736 solvent H2O Temp 298 DH_A 0.51 DH_B 3.29 voidV 0 dV iso 0 dVvoidV 0  unitC 1e-24
#setconc 4 Ca+2 0.01508 OH- 0.03 CO3-2 1.132E-5 H4SiO4 0.00001 1 counter H+ box





# ======= DISSOLUTION FIXES

# fix KMC-free delete DelCH Antonello 1 mech CHdel_micro sol_in fixed uniform box sol_out uniform box+dV

# ======= NUCLEATION FIXES - approach based on stored regions, lattices, and minimise

# Stored commands are evaluated each time a KMC event is carried out. They can depend on variables which are evaluated during Krun, when the stored quantity is invoked. Hence the variables must exist in the subcomm that invokes the stored quantity during the relevant Krun

# nucleation to be attempted in the whole box
lammps  all	variable 	xl equal xlo
lammps  all	variable 	xr equal xhi
lammps  all	variable 	yl equal ylo
lammps  all	variable 	yr equal yhi
lammps  all	variable 	zl equal zlo
lammps  all	variable 	zr equal zhi
# keeping these less than zlo and zhi to avoid lost atoms
store 	region RegNuc sphere 10 10 10 4.5 side out units box

lammps  all	variable nx equal 1.5*ceil((xhi-xlo)/$(v_eqDCH))
lammps  all	variable ny equal 1.5*ceil((yhi-ylo)/$(v_eqDCH))
lammps  all	variable nz equal 1.5*ceil((zhi-zlo)/$(v_eqDCH))
lammps	all	variable Lx equal (xhi-xlo)/$(v_nx)
lammps	all	variable Ly equal (yhi-ylo)/$(v_ny)
lammps	all	variable Lz equal (zhi-zlo)/$(v_nz) 
lammps	all	variable scale equal v_Lx
lammps	all	variable aa2 equal v_Ly/v_Lx
lammps	all	variable aa3 equal v_Lz/v_Lx
store 	lattice	latNuc custom $(v_scale) a1 1.0 0.0 0.0 a2 0.0 $(v_aa2) 0.0 a3 0.0 0.0 $(v_aa3) basis 0.5 0.5 0.5
store 	DV	latNuc variable DVnuc equal v_Lx*v_Ly*v_Lz/1.207949625
# last number is (rc/r0)^3

lammps	all	variable Qdmax equal v_eqDCH/200		
store minimize minNuc tstep 0.00045  1e-10 0 600 600 min_modify dmax $(v_Qdmax)

fix KMC-free nucleate NucCH Antonello RegNuc latNuc minNuc 2 1 sphere 0.473745541 wei simple 1 mech CHnuc_micro sol_in fixed uniform box sol_out uniform box+dV

# ========= DEFINE LAMMPS DUMPS AND THERMOS + VARIABLES ALSO FOR MASKE OUTPUT

lammps all variable N equal atoms
lammps all variable U equal epair
lammps all variable P equal press
 
lammps all variable tyCH atom "type == 1"

lammps all group g_CH dynamic all var tyCH every 1

lammps all variable NCH equal count(g_CH)

lammps all compute  PEall all pe/atom


# the lammps thermo must calculate all the thermo variables and compute you want to output via the MASKE's thermo
lammps all thermo_style	custom step atoms vol epair press v_NCH

lammps all thermo 1000

thermo 1 thermo.txt conc_Ca+2 conc_H4SiO4 conc_H2O conc_OH- conc_CO3-2 conc_H+ lmp_v_N lmp_v_U lmp_v_P lmp_v_NCH

dump Antonello D1 1 all     custom  dump.all id type x y z radius c_PEall
#dump subB D2 1 all     custom  dump.all id type x y z radius c_PEall


# =============== running the KMC simulation
lammps all print "STARTING KRUN" 
Krun 4000000000000000000


lammps Antonello print "\n SUCCESS \n"
